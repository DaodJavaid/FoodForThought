// <auto-generated />
using FoodForThrought.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodForThrought.Migrations.QuestionnaireDb
{
    [DbContext(typeof(QuestionnaireDbContext))]
    partial class QuestionnaireDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodForThrought.Models.QuestionnaireModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("emotion_questtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("forth_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("second_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("select_emotion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("third_option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
